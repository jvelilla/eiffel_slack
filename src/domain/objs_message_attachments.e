note
 description:"[
		Slack Web API
 		One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
  		The version of the OpenAPI document: 1.7.0
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class OBJS_MESSAGE_ATTACHMENTS 




feature --Access

    fallback: detachable STRING_32 
      
 	id: INTEGER_32 
    	 
 	image_bytes: INTEGER_32 
    	 
 	image_height: INTEGER_32 
    	 
    image_url: detachable STRING_32 
      
 	image_width: INTEGER_32 
    	 

feature -- Change Element  
 
    set_fallback (a_name: like fallback)
        -- Set 'fallback' with 'a_name'.
      do
        fallback := a_name
      ensure
        fallback_set: fallback = a_name		
      end

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name		
      end

    set_image_bytes (a_name: like image_bytes)
        -- Set 'image_bytes' with 'a_name'.
      do
        image_bytes := a_name
      ensure
        image_bytes_set: image_bytes = a_name		
      end

    set_image_height (a_name: like image_height)
        -- Set 'image_height' with 'a_name'.
      do
        image_height := a_name
      ensure
        image_height_set: image_height = a_name		
      end

    set_image_url (a_name: like image_url)
        -- Set 'image_url' with 'a_name'.
      do
        image_url := a_name
      ensure
        image_url_set: image_url = a_name		
      end

    set_image_width (a_name: like image_width)
        -- Set 'image_width' with 'a_name'.
      do
        image_width := a_name
      ensure
        image_width_set: image_width = a_name		
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass OBJS_MESSAGE_ATTACHMENTS%N")
        if attached fallback as l_fallback then
          Result.append ("%Nfallback:")
          Result.append (l_fallback.out)
          Result.append ("%N")    
        end  
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")    
        end  
        if attached image_bytes as l_image_bytes then
          Result.append ("%Nimage_bytes:")
          Result.append (l_image_bytes.out)
          Result.append ("%N")    
        end  
        if attached image_height as l_image_height then
          Result.append ("%Nimage_height:")
          Result.append (l_image_height.out)
          Result.append ("%N")    
        end  
        if attached image_url as l_image_url then
          Result.append ("%Nimage_url:")
          Result.append (l_image_url.out)
          Result.append ("%N")    
        end  
        if attached image_width as l_image_width then
          Result.append ("%Nimage_width:")
          Result.append (l_image_width.out)
          Result.append ("%N")    
        end  
      end
end


