note
 description:"[
		Slack Web API
 		One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
  		The version of the OpenAPI document: 1.7.0
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class OBJS_COMMENT 




feature --Access

    comment: detachable STRING_32 
      
 	created: INTEGER_32 
    	 
    id: detachable STRING_32 
      
 	is_intro: BOOLEAN 
    	 
 	is_starred: BOOLEAN 
    	 
 	num_stars: INTEGER_32 
    	 
    pinned_info: detachable ANY 
      
    pinned_to: detachable LIST [STRING_32] 
      
    reactions: detachable LIST [OBJS_REACTION] 
      
 	timestamp: INTEGER_32 
    	 
    user: detachable STRING_32 
      

feature -- Change Element  
 
    set_comment (a_name: like comment)
        -- Set 'comment' with 'a_name'.
      do
        comment := a_name
      ensure
        comment_set: comment = a_name		
      end

    set_created (a_name: like created)
        -- Set 'created' with 'a_name'.
      do
        created := a_name
      ensure
        created_set: created = a_name		
      end

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name		
      end

    set_is_intro (a_name: like is_intro)
        -- Set 'is_intro' with 'a_name'.
      do
        is_intro := a_name
      ensure
        is_intro_set: is_intro = a_name		
      end

    set_is_starred (a_name: like is_starred)
        -- Set 'is_starred' with 'a_name'.
      do
        is_starred := a_name
      ensure
        is_starred_set: is_starred = a_name		
      end

    set_num_stars (a_name: like num_stars)
        -- Set 'num_stars' with 'a_name'.
      do
        num_stars := a_name
      ensure
        num_stars_set: num_stars = a_name		
      end

    set_pinned_info (a_name: like pinned_info)
        -- Set 'pinned_info' with 'a_name'.
      do
        pinned_info := a_name
      ensure
        pinned_info_set: pinned_info = a_name		
      end

    set_pinned_to (a_name: like pinned_to)
        -- Set 'pinned_to' with 'a_name'.
      do
        pinned_to := a_name
      ensure
        pinned_to_set: pinned_to = a_name		
      end

    set_reactions (a_name: like reactions)
        -- Set 'reactions' with 'a_name'.
      do
        reactions := a_name
      ensure
        reactions_set: reactions = a_name		
      end

    set_timestamp (a_name: like timestamp)
        -- Set 'timestamp' with 'a_name'.
      do
        timestamp := a_name
      ensure
        timestamp_set: timestamp = a_name		
      end

    set_user (a_name: like user)
        -- Set 'user' with 'a_name'.
      do
        user := a_name
      ensure
        user_set: user = a_name		
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass OBJS_COMMENT%N")
        if attached comment as l_comment then
          Result.append ("%Ncomment:")
          Result.append (l_comment.out)
          Result.append ("%N")    
        end  
        if attached created as l_created then
          Result.append ("%Ncreated:")
          Result.append (l_created.out)
          Result.append ("%N")    
        end  
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")    
        end  
        if attached is_intro as l_is_intro then
          Result.append ("%Nis_intro:")
          Result.append (l_is_intro.out)
          Result.append ("%N")    
        end  
        if attached is_starred as l_is_starred then
          Result.append ("%Nis_starred:")
          Result.append (l_is_starred.out)
          Result.append ("%N")    
        end  
        if attached num_stars as l_num_stars then
          Result.append ("%Nnum_stars:")
          Result.append (l_num_stars.out)
          Result.append ("%N")    
        end  
        if attached pinned_info as l_pinned_info then
          Result.append ("%Npinned_info:")
          Result.append (l_pinned_info.out)
          Result.append ("%N")    
        end  
        if attached pinned_to as l_pinned_to then
          across l_pinned_to as ic loop
            Result.append ("%N pinned_to:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end 
        if attached reactions as l_reactions then
          across l_reactions as ic loop
            Result.append ("%N reactions:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end 
        if attached timestamp as l_timestamp then
          Result.append ("%Ntimestamp:")
          Result.append (l_timestamp.out)
          Result.append ("%N")    
        end  
        if attached user as l_user then
          Result.append ("%Nuser:")
          Result.append (l_user.out)
          Result.append ("%N")    
        end  
      end
end


