note
 description:"[
		Slack Web API
 		One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
  		The version of the OpenAPI document: 1.7.0
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class OBJS_PAGING 




feature --Access

 	count: INTEGER_32 
    	 
 	page: INTEGER_32 
    	 
 	pages: INTEGER_32 
    	 
 	per_page: INTEGER_32 
    	 
 	spill: INTEGER_32 
    	 
 	total: INTEGER_32 
    	 

feature -- Change Element  
 
    set_count (a_name: like count)
        -- Set 'count' with 'a_name'.
      do
        count := a_name
      ensure
        count_set: count = a_name		
      end

    set_page (a_name: like page)
        -- Set 'page' with 'a_name'.
      do
        page := a_name
      ensure
        page_set: page = a_name		
      end

    set_pages (a_name: like pages)
        -- Set 'pages' with 'a_name'.
      do
        pages := a_name
      ensure
        pages_set: pages = a_name		
      end

    set_per_page (a_name: like per_page)
        -- Set 'per_page' with 'a_name'.
      do
        per_page := a_name
      ensure
        per_page_set: per_page = a_name		
      end

    set_spill (a_name: like spill)
        -- Set 'spill' with 'a_name'.
      do
        spill := a_name
      ensure
        spill_set: spill = a_name		
      end

    set_total (a_name: like total)
        -- Set 'total' with 'a_name'.
      do
        total := a_name
      ensure
        total_set: total = a_name		
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass OBJS_PAGING%N")
        if attached count as l_count then
          Result.append ("%Ncount:")
          Result.append (l_count.out)
          Result.append ("%N")    
        end  
        if attached page as l_page then
          Result.append ("%Npage:")
          Result.append (l_page.out)
          Result.append ("%N")    
        end  
        if attached pages as l_pages then
          Result.append ("%Npages:")
          Result.append (l_pages.out)
          Result.append ("%N")    
        end  
        if attached per_page as l_per_page then
          Result.append ("%Nper_page:")
          Result.append (l_per_page.out)
          Result.append ("%N")    
        end  
        if attached spill as l_spill then
          Result.append ("%Nspill:")
          Result.append (l_spill.out)
          Result.append ("%N")    
        end  
        if attached total as l_total then
          Result.append ("%Ntotal:")
          Result.append (l_total.out)
          Result.append ("%N")    
        end  
      end
end


