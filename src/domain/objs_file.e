note
 description:"[
		Slack Web API
 		One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
  		The version of the OpenAPI document: 1.7.0
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class OBJS_FILE 




feature --Access

    channels: detachable LIST [STRING_32] 
      
 	comments_count: INTEGER_32 
    	 
 	created: INTEGER_32 
    	 
 	date_delete: INTEGER_32 
    	 
 	display_as_bot: BOOLEAN 
    	 
 	editable: BOOLEAN 
    	 
    editor: detachable STRING_32 
      
    external_id: detachable STRING_32 
      
    external_type: detachable STRING_32 
      
    external_url: detachable STRING 
      
    filetype: detachable STRING_32 
      
    groups: detachable LIST [STRING_32] 
      
 	has_rich_preview: BOOLEAN 
    	 
    id: detachable STRING_32 
      
 	image_exif_rotation: INTEGER_32 
    	 
    ims: detachable LIST [STRING_32] 
      
 	is_external: BOOLEAN 
    	 
 	is_public: BOOLEAN 
    	 
 	is_starred: BOOLEAN 
    	 
 	is_tombstoned: BOOLEAN 
    	 
    last_editor: detachable STRING_32 
      
    mimetype: detachable STRING_32 
      
    mode: detachable STRING_32 
      
    name: detachable STRING_32 
      
 	non_owner_editable: BOOLEAN 
    	 
 	num_stars: INTEGER_32 
    	 
 	original_h: INTEGER_32 
    	 
 	original_w: INTEGER_32 
    	 
    permalink: detachable STRING 
      
    permalink_public: detachable STRING 
      
    pinned_info: detachable ANY 
      
    pinned_to: detachable LIST [STRING_32] 
      
    pretty_type: detachable STRING_32 
      
    preview: detachable STRING_32 
      
 	public_url_shared: BOOLEAN 
    	 
    reactions: detachable LIST [OBJS_REACTION] 
      
    shares: detachable OBJS_FILE_SHARES 
      
 	size: INTEGER_32 
    	 
    source_team: detachable STRING_32 
      
    state: detachable STRING_32 
      
    thumb_1024: detachable STRING 
      
 	thumb_1024_h: INTEGER_32 
    	 
 	thumb_1024_w: INTEGER_32 
    	 
    thumb_160: detachable STRING 
      
    thumb_360: detachable STRING 
      
 	thumb_360_h: INTEGER_32 
    	 
 	thumb_360_w: INTEGER_32 
    	 
    thumb_480: detachable STRING 
      
 	thumb_480_h: INTEGER_32 
    	 
 	thumb_480_w: INTEGER_32 
    	 
    thumb_64: detachable STRING 
      
    thumb_720: detachable STRING 
      
 	thumb_720_h: INTEGER_32 
    	 
 	thumb_720_w: INTEGER_32 
    	 
    thumb_80: detachable STRING 
      
    thumb_800: detachable STRING 
      
 	thumb_800_h: INTEGER_32 
    	 
 	thumb_800_w: INTEGER_32 
    	 
    thumb_960: detachable STRING 
      
 	thumb_960_h: INTEGER_32 
    	 
 	thumb_960_w: INTEGER_32 
    	 
    thumb_tiny: detachable STRING_32 
      
 	timestamp: INTEGER_32 
    	 
    title: detachable STRING_32 
      
 	updated: INTEGER_32 
    	 
    url_private: detachable STRING 
      
    url_private_download: detachable STRING 
      
    user: detachable STRING_32 
      
    user_team: detachable STRING_32 
      
    username: detachable STRING_32 
      

feature -- Change Element  
 
    set_channels (a_name: like channels)
        -- Set 'channels' with 'a_name'.
      do
        channels := a_name
      ensure
        channels_set: channels = a_name		
      end

    set_comments_count (a_name: like comments_count)
        -- Set 'comments_count' with 'a_name'.
      do
        comments_count := a_name
      ensure
        comments_count_set: comments_count = a_name		
      end

    set_created (a_name: like created)
        -- Set 'created' with 'a_name'.
      do
        created := a_name
      ensure
        created_set: created = a_name		
      end

    set_date_delete (a_name: like date_delete)
        -- Set 'date_delete' with 'a_name'.
      do
        date_delete := a_name
      ensure
        date_delete_set: date_delete = a_name		
      end

    set_display_as_bot (a_name: like display_as_bot)
        -- Set 'display_as_bot' with 'a_name'.
      do
        display_as_bot := a_name
      ensure
        display_as_bot_set: display_as_bot = a_name		
      end

    set_editable (a_name: like editable)
        -- Set 'editable' with 'a_name'.
      do
        editable := a_name
      ensure
        editable_set: editable = a_name		
      end

    set_editor (a_name: like editor)
        -- Set 'editor' with 'a_name'.
      do
        editor := a_name
      ensure
        editor_set: editor = a_name		
      end

    set_external_id (a_name: like external_id)
        -- Set 'external_id' with 'a_name'.
      do
        external_id := a_name
      ensure
        external_id_set: external_id = a_name		
      end

    set_external_type (a_name: like external_type)
        -- Set 'external_type' with 'a_name'.
      do
        external_type := a_name
      ensure
        external_type_set: external_type = a_name		
      end

    set_external_url (a_name: like external_url)
        -- Set 'external_url' with 'a_name'.
      do
        external_url := a_name
      ensure
        external_url_set: external_url = a_name		
      end

    set_filetype (a_name: like filetype)
        -- Set 'filetype' with 'a_name'.
      do
        filetype := a_name
      ensure
        filetype_set: filetype = a_name		
      end

    set_groups (a_name: like groups)
        -- Set 'groups' with 'a_name'.
      do
        groups := a_name
      ensure
        groups_set: groups = a_name		
      end

    set_has_rich_preview (a_name: like has_rich_preview)
        -- Set 'has_rich_preview' with 'a_name'.
      do
        has_rich_preview := a_name
      ensure
        has_rich_preview_set: has_rich_preview = a_name		
      end

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name		
      end

    set_image_exif_rotation (a_name: like image_exif_rotation)
        -- Set 'image_exif_rotation' with 'a_name'.
      do
        image_exif_rotation := a_name
      ensure
        image_exif_rotation_set: image_exif_rotation = a_name		
      end

    set_ims (a_name: like ims)
        -- Set 'ims' with 'a_name'.
      do
        ims := a_name
      ensure
        ims_set: ims = a_name		
      end

    set_is_external (a_name: like is_external)
        -- Set 'is_external' with 'a_name'.
      do
        is_external := a_name
      ensure
        is_external_set: is_external = a_name		
      end

    set_is_public (a_name: like is_public)
        -- Set 'is_public' with 'a_name'.
      do
        is_public := a_name
      ensure
        is_public_set: is_public = a_name		
      end

    set_is_starred (a_name: like is_starred)
        -- Set 'is_starred' with 'a_name'.
      do
        is_starred := a_name
      ensure
        is_starred_set: is_starred = a_name		
      end

    set_is_tombstoned (a_name: like is_tombstoned)
        -- Set 'is_tombstoned' with 'a_name'.
      do
        is_tombstoned := a_name
      ensure
        is_tombstoned_set: is_tombstoned = a_name		
      end

    set_last_editor (a_name: like last_editor)
        -- Set 'last_editor' with 'a_name'.
      do
        last_editor := a_name
      ensure
        last_editor_set: last_editor = a_name		
      end

    set_mimetype (a_name: like mimetype)
        -- Set 'mimetype' with 'a_name'.
      do
        mimetype := a_name
      ensure
        mimetype_set: mimetype = a_name		
      end

    set_mode (a_name: like mode)
        -- Set 'mode' with 'a_name'.
      do
        mode := a_name
      ensure
        mode_set: mode = a_name		
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name		
      end

    set_non_owner_editable (a_name: like non_owner_editable)
        -- Set 'non_owner_editable' with 'a_name'.
      do
        non_owner_editable := a_name
      ensure
        non_owner_editable_set: non_owner_editable = a_name		
      end

    set_num_stars (a_name: like num_stars)
        -- Set 'num_stars' with 'a_name'.
      do
        num_stars := a_name
      ensure
        num_stars_set: num_stars = a_name		
      end

    set_original_h (a_name: like original_h)
        -- Set 'original_h' with 'a_name'.
      do
        original_h := a_name
      ensure
        original_h_set: original_h = a_name		
      end

    set_original_w (a_name: like original_w)
        -- Set 'original_w' with 'a_name'.
      do
        original_w := a_name
      ensure
        original_w_set: original_w = a_name		
      end

    set_permalink (a_name: like permalink)
        -- Set 'permalink' with 'a_name'.
      do
        permalink := a_name
      ensure
        permalink_set: permalink = a_name		
      end

    set_permalink_public (a_name: like permalink_public)
        -- Set 'permalink_public' with 'a_name'.
      do
        permalink_public := a_name
      ensure
        permalink_public_set: permalink_public = a_name		
      end

    set_pinned_info (a_name: like pinned_info)
        -- Set 'pinned_info' with 'a_name'.
      do
        pinned_info := a_name
      ensure
        pinned_info_set: pinned_info = a_name		
      end

    set_pinned_to (a_name: like pinned_to)
        -- Set 'pinned_to' with 'a_name'.
      do
        pinned_to := a_name
      ensure
        pinned_to_set: pinned_to = a_name		
      end

    set_pretty_type (a_name: like pretty_type)
        -- Set 'pretty_type' with 'a_name'.
      do
        pretty_type := a_name
      ensure
        pretty_type_set: pretty_type = a_name		
      end

    set_preview (a_name: like preview)
        -- Set 'preview' with 'a_name'.
      do
        preview := a_name
      ensure
        preview_set: preview = a_name		
      end

    set_public_url_shared (a_name: like public_url_shared)
        -- Set 'public_url_shared' with 'a_name'.
      do
        public_url_shared := a_name
      ensure
        public_url_shared_set: public_url_shared = a_name		
      end

    set_reactions (a_name: like reactions)
        -- Set 'reactions' with 'a_name'.
      do
        reactions := a_name
      ensure
        reactions_set: reactions = a_name		
      end

    set_shares (a_name: like shares)
        -- Set 'shares' with 'a_name'.
      do
        shares := a_name
      ensure
        shares_set: shares = a_name		
      end

    set_size (a_name: like size)
        -- Set 'size' with 'a_name'.
      do
        size := a_name
      ensure
        size_set: size = a_name		
      end

    set_source_team (a_name: like source_team)
        -- Set 'source_team' with 'a_name'.
      do
        source_team := a_name
      ensure
        source_team_set: source_team = a_name		
      end

    set_state (a_name: like state)
        -- Set 'state' with 'a_name'.
      do
        state := a_name
      ensure
        state_set: state = a_name		
      end

    set_thumb_1024 (a_name: like thumb_1024)
        -- Set 'thumb_1024' with 'a_name'.
      do
        thumb_1024 := a_name
      ensure
        thumb_1024_set: thumb_1024 = a_name		
      end

    set_thumb_1024_h (a_name: like thumb_1024_h)
        -- Set 'thumb_1024_h' with 'a_name'.
      do
        thumb_1024_h := a_name
      ensure
        thumb_1024_h_set: thumb_1024_h = a_name		
      end

    set_thumb_1024_w (a_name: like thumb_1024_w)
        -- Set 'thumb_1024_w' with 'a_name'.
      do
        thumb_1024_w := a_name
      ensure
        thumb_1024_w_set: thumb_1024_w = a_name		
      end

    set_thumb_160 (a_name: like thumb_160)
        -- Set 'thumb_160' with 'a_name'.
      do
        thumb_160 := a_name
      ensure
        thumb_160_set: thumb_160 = a_name		
      end

    set_thumb_360 (a_name: like thumb_360)
        -- Set 'thumb_360' with 'a_name'.
      do
        thumb_360 := a_name
      ensure
        thumb_360_set: thumb_360 = a_name		
      end

    set_thumb_360_h (a_name: like thumb_360_h)
        -- Set 'thumb_360_h' with 'a_name'.
      do
        thumb_360_h := a_name
      ensure
        thumb_360_h_set: thumb_360_h = a_name		
      end

    set_thumb_360_w (a_name: like thumb_360_w)
        -- Set 'thumb_360_w' with 'a_name'.
      do
        thumb_360_w := a_name
      ensure
        thumb_360_w_set: thumb_360_w = a_name		
      end

    set_thumb_480 (a_name: like thumb_480)
        -- Set 'thumb_480' with 'a_name'.
      do
        thumb_480 := a_name
      ensure
        thumb_480_set: thumb_480 = a_name		
      end

    set_thumb_480_h (a_name: like thumb_480_h)
        -- Set 'thumb_480_h' with 'a_name'.
      do
        thumb_480_h := a_name
      ensure
        thumb_480_h_set: thumb_480_h = a_name		
      end

    set_thumb_480_w (a_name: like thumb_480_w)
        -- Set 'thumb_480_w' with 'a_name'.
      do
        thumb_480_w := a_name
      ensure
        thumb_480_w_set: thumb_480_w = a_name		
      end

    set_thumb_64 (a_name: like thumb_64)
        -- Set 'thumb_64' with 'a_name'.
      do
        thumb_64 := a_name
      ensure
        thumb_64_set: thumb_64 = a_name		
      end

    set_thumb_720 (a_name: like thumb_720)
        -- Set 'thumb_720' with 'a_name'.
      do
        thumb_720 := a_name
      ensure
        thumb_720_set: thumb_720 = a_name		
      end

    set_thumb_720_h (a_name: like thumb_720_h)
        -- Set 'thumb_720_h' with 'a_name'.
      do
        thumb_720_h := a_name
      ensure
        thumb_720_h_set: thumb_720_h = a_name		
      end

    set_thumb_720_w (a_name: like thumb_720_w)
        -- Set 'thumb_720_w' with 'a_name'.
      do
        thumb_720_w := a_name
      ensure
        thumb_720_w_set: thumb_720_w = a_name		
      end

    set_thumb_80 (a_name: like thumb_80)
        -- Set 'thumb_80' with 'a_name'.
      do
        thumb_80 := a_name
      ensure
        thumb_80_set: thumb_80 = a_name		
      end

    set_thumb_800 (a_name: like thumb_800)
        -- Set 'thumb_800' with 'a_name'.
      do
        thumb_800 := a_name
      ensure
        thumb_800_set: thumb_800 = a_name		
      end

    set_thumb_800_h (a_name: like thumb_800_h)
        -- Set 'thumb_800_h' with 'a_name'.
      do
        thumb_800_h := a_name
      ensure
        thumb_800_h_set: thumb_800_h = a_name		
      end

    set_thumb_800_w (a_name: like thumb_800_w)
        -- Set 'thumb_800_w' with 'a_name'.
      do
        thumb_800_w := a_name
      ensure
        thumb_800_w_set: thumb_800_w = a_name		
      end

    set_thumb_960 (a_name: like thumb_960)
        -- Set 'thumb_960' with 'a_name'.
      do
        thumb_960 := a_name
      ensure
        thumb_960_set: thumb_960 = a_name		
      end

    set_thumb_960_h (a_name: like thumb_960_h)
        -- Set 'thumb_960_h' with 'a_name'.
      do
        thumb_960_h := a_name
      ensure
        thumb_960_h_set: thumb_960_h = a_name		
      end

    set_thumb_960_w (a_name: like thumb_960_w)
        -- Set 'thumb_960_w' with 'a_name'.
      do
        thumb_960_w := a_name
      ensure
        thumb_960_w_set: thumb_960_w = a_name		
      end

    set_thumb_tiny (a_name: like thumb_tiny)
        -- Set 'thumb_tiny' with 'a_name'.
      do
        thumb_tiny := a_name
      ensure
        thumb_tiny_set: thumb_tiny = a_name		
      end

    set_timestamp (a_name: like timestamp)
        -- Set 'timestamp' with 'a_name'.
      do
        timestamp := a_name
      ensure
        timestamp_set: timestamp = a_name		
      end

    set_title (a_name: like title)
        -- Set 'title' with 'a_name'.
      do
        title := a_name
      ensure
        title_set: title = a_name		
      end

    set_updated (a_name: like updated)
        -- Set 'updated' with 'a_name'.
      do
        updated := a_name
      ensure
        updated_set: updated = a_name		
      end

    set_url_private (a_name: like url_private)
        -- Set 'url_private' with 'a_name'.
      do
        url_private := a_name
      ensure
        url_private_set: url_private = a_name		
      end

    set_url_private_download (a_name: like url_private_download)
        -- Set 'url_private_download' with 'a_name'.
      do
        url_private_download := a_name
      ensure
        url_private_download_set: url_private_download = a_name		
      end

    set_user (a_name: like user)
        -- Set 'user' with 'a_name'.
      do
        user := a_name
      ensure
        user_set: user = a_name		
      end

    set_user_team (a_name: like user_team)
        -- Set 'user_team' with 'a_name'.
      do
        user_team := a_name
      ensure
        user_team_set: user_team = a_name		
      end

    set_username (a_name: like username)
        -- Set 'username' with 'a_name'.
      do
        username := a_name
      ensure
        username_set: username = a_name		
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass OBJS_FILE%N")
        if attached channels as l_channels then
          across l_channels as ic loop
            Result.append ("%N channels:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end 
        if attached comments_count as l_comments_count then
          Result.append ("%Ncomments_count:")
          Result.append (l_comments_count.out)
          Result.append ("%N")    
        end  
        if attached created as l_created then
          Result.append ("%Ncreated:")
          Result.append (l_created.out)
          Result.append ("%N")    
        end  
        if attached date_delete as l_date_delete then
          Result.append ("%Ndate_delete:")
          Result.append (l_date_delete.out)
          Result.append ("%N")    
        end  
        if attached display_as_bot as l_display_as_bot then
          Result.append ("%Ndisplay_as_bot:")
          Result.append (l_display_as_bot.out)
          Result.append ("%N")    
        end  
        if attached editable as l_editable then
          Result.append ("%Neditable:")
          Result.append (l_editable.out)
          Result.append ("%N")    
        end  
        if attached editor as l_editor then
          Result.append ("%Neditor:")
          Result.append (l_editor.out)
          Result.append ("%N")    
        end  
        if attached external_id as l_external_id then
          Result.append ("%Nexternal_id:")
          Result.append (l_external_id.out)
          Result.append ("%N")    
        end  
        if attached external_type as l_external_type then
          Result.append ("%Nexternal_type:")
          Result.append (l_external_type.out)
          Result.append ("%N")    
        end  
        if attached external_url as l_external_url then
          Result.append ("%Nexternal_url:")
          Result.append (l_external_url.out)
          Result.append ("%N")    
        end  
        if attached filetype as l_filetype then
          Result.append ("%Nfiletype:")
          Result.append (l_filetype.out)
          Result.append ("%N")    
        end  
        if attached groups as l_groups then
          across l_groups as ic loop
            Result.append ("%N groups:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end 
        if attached has_rich_preview as l_has_rich_preview then
          Result.append ("%Nhas_rich_preview:")
          Result.append (l_has_rich_preview.out)
          Result.append ("%N")    
        end  
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")    
        end  
        if attached image_exif_rotation as l_image_exif_rotation then
          Result.append ("%Nimage_exif_rotation:")
          Result.append (l_image_exif_rotation.out)
          Result.append ("%N")    
        end  
        if attached ims as l_ims then
          across l_ims as ic loop
            Result.append ("%N ims:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end 
        if attached is_external as l_is_external then
          Result.append ("%Nis_external:")
          Result.append (l_is_external.out)
          Result.append ("%N")    
        end  
        if attached is_public as l_is_public then
          Result.append ("%Nis_public:")
          Result.append (l_is_public.out)
          Result.append ("%N")    
        end  
        if attached is_starred as l_is_starred then
          Result.append ("%Nis_starred:")
          Result.append (l_is_starred.out)
          Result.append ("%N")    
        end  
        if attached is_tombstoned as l_is_tombstoned then
          Result.append ("%Nis_tombstoned:")
          Result.append (l_is_tombstoned.out)
          Result.append ("%N")    
        end  
        if attached last_editor as l_last_editor then
          Result.append ("%Nlast_editor:")
          Result.append (l_last_editor.out)
          Result.append ("%N")    
        end  
        if attached mimetype as l_mimetype then
          Result.append ("%Nmimetype:")
          Result.append (l_mimetype.out)
          Result.append ("%N")    
        end  
        if attached mode as l_mode then
          Result.append ("%Nmode:")
          Result.append (l_mode.out)
          Result.append ("%N")    
        end  
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")    
        end  
        if attached non_owner_editable as l_non_owner_editable then
          Result.append ("%Nnon_owner_editable:")
          Result.append (l_non_owner_editable.out)
          Result.append ("%N")    
        end  
        if attached num_stars as l_num_stars then
          Result.append ("%Nnum_stars:")
          Result.append (l_num_stars.out)
          Result.append ("%N")    
        end  
        if attached original_h as l_original_h then
          Result.append ("%Noriginal_h:")
          Result.append (l_original_h.out)
          Result.append ("%N")    
        end  
        if attached original_w as l_original_w then
          Result.append ("%Noriginal_w:")
          Result.append (l_original_w.out)
          Result.append ("%N")    
        end  
        if attached permalink as l_permalink then
          Result.append ("%Npermalink:")
          Result.append (l_permalink.out)
          Result.append ("%N")    
        end  
        if attached permalink_public as l_permalink_public then
          Result.append ("%Npermalink_public:")
          Result.append (l_permalink_public.out)
          Result.append ("%N")    
        end  
        if attached pinned_info as l_pinned_info then
          Result.append ("%Npinned_info:")
          Result.append (l_pinned_info.out)
          Result.append ("%N")    
        end  
        if attached pinned_to as l_pinned_to then
          across l_pinned_to as ic loop
            Result.append ("%N pinned_to:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end 
        if attached pretty_type as l_pretty_type then
          Result.append ("%Npretty_type:")
          Result.append (l_pretty_type.out)
          Result.append ("%N")    
        end  
        if attached preview as l_preview then
          Result.append ("%Npreview:")
          Result.append (l_preview.out)
          Result.append ("%N")    
        end  
        if attached public_url_shared as l_public_url_shared then
          Result.append ("%Npublic_url_shared:")
          Result.append (l_public_url_shared.out)
          Result.append ("%N")    
        end  
        if attached reactions as l_reactions then
          across l_reactions as ic loop
            Result.append ("%N reactions:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end 
        if attached shares as l_shares then
          Result.append ("%Nshares:")
          Result.append (l_shares.out)
          Result.append ("%N")    
        end  
        if attached size as l_size then
          Result.append ("%Nsize:")
          Result.append (l_size.out)
          Result.append ("%N")    
        end  
        if attached source_team as l_source_team then
          Result.append ("%Nsource_team:")
          Result.append (l_source_team.out)
          Result.append ("%N")    
        end  
        if attached state as l_state then
          Result.append ("%Nstate:")
          Result.append (l_state.out)
          Result.append ("%N")    
        end  
        if attached thumb_1024 as l_thumb_1024 then
          Result.append ("%Nthumb_1024:")
          Result.append (l_thumb_1024.out)
          Result.append ("%N")    
        end  
        if attached thumb_1024_h as l_thumb_1024_h then
          Result.append ("%Nthumb_1024_h:")
          Result.append (l_thumb_1024_h.out)
          Result.append ("%N")    
        end  
        if attached thumb_1024_w as l_thumb_1024_w then
          Result.append ("%Nthumb_1024_w:")
          Result.append (l_thumb_1024_w.out)
          Result.append ("%N")    
        end  
        if attached thumb_160 as l_thumb_160 then
          Result.append ("%Nthumb_160:")
          Result.append (l_thumb_160.out)
          Result.append ("%N")    
        end  
        if attached thumb_360 as l_thumb_360 then
          Result.append ("%Nthumb_360:")
          Result.append (l_thumb_360.out)
          Result.append ("%N")    
        end  
        if attached thumb_360_h as l_thumb_360_h then
          Result.append ("%Nthumb_360_h:")
          Result.append (l_thumb_360_h.out)
          Result.append ("%N")    
        end  
        if attached thumb_360_w as l_thumb_360_w then
          Result.append ("%Nthumb_360_w:")
          Result.append (l_thumb_360_w.out)
          Result.append ("%N")    
        end  
        if attached thumb_480 as l_thumb_480 then
          Result.append ("%Nthumb_480:")
          Result.append (l_thumb_480.out)
          Result.append ("%N")    
        end  
        if attached thumb_480_h as l_thumb_480_h then
          Result.append ("%Nthumb_480_h:")
          Result.append (l_thumb_480_h.out)
          Result.append ("%N")    
        end  
        if attached thumb_480_w as l_thumb_480_w then
          Result.append ("%Nthumb_480_w:")
          Result.append (l_thumb_480_w.out)
          Result.append ("%N")    
        end  
        if attached thumb_64 as l_thumb_64 then
          Result.append ("%Nthumb_64:")
          Result.append (l_thumb_64.out)
          Result.append ("%N")    
        end  
        if attached thumb_720 as l_thumb_720 then
          Result.append ("%Nthumb_720:")
          Result.append (l_thumb_720.out)
          Result.append ("%N")    
        end  
        if attached thumb_720_h as l_thumb_720_h then
          Result.append ("%Nthumb_720_h:")
          Result.append (l_thumb_720_h.out)
          Result.append ("%N")    
        end  
        if attached thumb_720_w as l_thumb_720_w then
          Result.append ("%Nthumb_720_w:")
          Result.append (l_thumb_720_w.out)
          Result.append ("%N")    
        end  
        if attached thumb_80 as l_thumb_80 then
          Result.append ("%Nthumb_80:")
          Result.append (l_thumb_80.out)
          Result.append ("%N")    
        end  
        if attached thumb_800 as l_thumb_800 then
          Result.append ("%Nthumb_800:")
          Result.append (l_thumb_800.out)
          Result.append ("%N")    
        end  
        if attached thumb_800_h as l_thumb_800_h then
          Result.append ("%Nthumb_800_h:")
          Result.append (l_thumb_800_h.out)
          Result.append ("%N")    
        end  
        if attached thumb_800_w as l_thumb_800_w then
          Result.append ("%Nthumb_800_w:")
          Result.append (l_thumb_800_w.out)
          Result.append ("%N")    
        end  
        if attached thumb_960 as l_thumb_960 then
          Result.append ("%Nthumb_960:")
          Result.append (l_thumb_960.out)
          Result.append ("%N")    
        end  
        if attached thumb_960_h as l_thumb_960_h then
          Result.append ("%Nthumb_960_h:")
          Result.append (l_thumb_960_h.out)
          Result.append ("%N")    
        end  
        if attached thumb_960_w as l_thumb_960_w then
          Result.append ("%Nthumb_960_w:")
          Result.append (l_thumb_960_w.out)
          Result.append ("%N")    
        end  
        if attached thumb_tiny as l_thumb_tiny then
          Result.append ("%Nthumb_tiny:")
          Result.append (l_thumb_tiny.out)
          Result.append ("%N")    
        end  
        if attached timestamp as l_timestamp then
          Result.append ("%Ntimestamp:")
          Result.append (l_timestamp.out)
          Result.append ("%N")    
        end  
        if attached title as l_title then
          Result.append ("%Ntitle:")
          Result.append (l_title.out)
          Result.append ("%N")    
        end  
        if attached updated as l_updated then
          Result.append ("%Nupdated:")
          Result.append (l_updated.out)
          Result.append ("%N")    
        end  
        if attached url_private as l_url_private then
          Result.append ("%Nurl_private:")
          Result.append (l_url_private.out)
          Result.append ("%N")    
        end  
        if attached url_private_download as l_url_private_download then
          Result.append ("%Nurl_private_download:")
          Result.append (l_url_private_download.out)
          Result.append ("%N")    
        end  
        if attached user as l_user then
          Result.append ("%Nuser:")
          Result.append (l_user.out)
          Result.append ("%N")    
        end  
        if attached user_team as l_user_team then
          Result.append ("%Nuser_team:")
          Result.append (l_user_team.out)
          Result.append ("%N")    
        end  
        if attached username as l_username then
          Result.append ("%Nusername:")
          Result.append (l_username.out)
          Result.append ("%N")    
        end  
      end
end


