note
 description:"[
		Slack Web API
 		One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
  		The version of the OpenAPI document: 1.7.0
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class OBJS_RESOURCES 




feature --Access

    excluded_ids: detachable LIST [ANY] 
      
    ids: detachable LIST [ANY] 
      
 	wildcard: BOOLEAN 
    	 

feature -- Change Element  
 
    set_excluded_ids (a_name: like excluded_ids)
        -- Set 'excluded_ids' with 'a_name'.
      do
        excluded_ids := a_name
      ensure
        excluded_ids_set: excluded_ids = a_name		
      end

    set_ids (a_name: like ids)
        -- Set 'ids' with 'a_name'.
      do
        ids := a_name
      ensure
        ids_set: ids = a_name		
      end

    set_wildcard (a_name: like wildcard)
        -- Set 'wildcard' with 'a_name'.
      do
        wildcard := a_name
      ensure
        wildcard_set: wildcard = a_name		
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass OBJS_RESOURCES%N")
        if attached excluded_ids as l_excluded_ids then
          across l_excluded_ids as ic loop
            Result.append ("%N excluded_ids:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end 
        if attached ids as l_ids then
          across l_ids as ic loop
            Result.append ("%N ids:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end 
        if attached wildcard as l_wildcard then
          Result.append ("%Nwildcard:")
          Result.append (l_wildcard.out)
          Result.append ("%N")    
        end  
      end
end


