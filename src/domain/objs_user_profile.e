note
 description:"[
		Slack Web API
 		One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
  		The version of the OpenAPI document: 1.7.0
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class OBJS_USER_PROFILE 




feature --Access

 	always_active: BOOLEAN 
    	 
    api_app_id: detachable STRING_32 
      
    avatar_hash: detachable STRING_32 
      
    bot_id: detachable STRING_32 
      
    display_name: detachable STRING_32 
      
    display_name_normalized: detachable STRING_32 
      
 	is_app_user: BOOLEAN 
    	 
 	is_custom_image: BOOLEAN 
    	 
    last_avatar_image_hash: detachable STRING_32 
      
 	memberships_count: INTEGER_32 
    	 
    phone: detachable STRING_32 
      
    pronouns: detachable STRING_32 
      
    real_name: detachable STRING_32 
      
    real_name_normalized: detachable STRING_32 
      
    skype: detachable STRING_32 
      
    status_default_emoji: detachable STRING_32 
      
    status_default_text: detachable STRING_32 
      
    status_emoji: detachable STRING_32 
      
 	status_expiration: INTEGER_32 
    	 
    status_text: detachable STRING_32 
      
    team: detachable STRING_32 
      
    title: detachable STRING_32 
      
 	updated: INTEGER_32 
    	 
    user_id: detachable STRING_32 
      

feature -- Change Element  
 
    set_always_active (a_name: like always_active)
        -- Set 'always_active' with 'a_name'.
      do
        always_active := a_name
      ensure
        always_active_set: always_active = a_name		
      end

    set_api_app_id (a_name: like api_app_id)
        -- Set 'api_app_id' with 'a_name'.
      do
        api_app_id := a_name
      ensure
        api_app_id_set: api_app_id = a_name		
      end

    set_avatar_hash (a_name: like avatar_hash)
        -- Set 'avatar_hash' with 'a_name'.
      do
        avatar_hash := a_name
      ensure
        avatar_hash_set: avatar_hash = a_name		
      end

    set_bot_id (a_name: like bot_id)
        -- Set 'bot_id' with 'a_name'.
      do
        bot_id := a_name
      ensure
        bot_id_set: bot_id = a_name		
      end

    set_display_name (a_name: like display_name)
        -- Set 'display_name' with 'a_name'.
      do
        display_name := a_name
      ensure
        display_name_set: display_name = a_name		
      end

    set_display_name_normalized (a_name: like display_name_normalized)
        -- Set 'display_name_normalized' with 'a_name'.
      do
        display_name_normalized := a_name
      ensure
        display_name_normalized_set: display_name_normalized = a_name		
      end

    set_is_app_user (a_name: like is_app_user)
        -- Set 'is_app_user' with 'a_name'.
      do
        is_app_user := a_name
      ensure
        is_app_user_set: is_app_user = a_name		
      end

    set_is_custom_image (a_name: like is_custom_image)
        -- Set 'is_custom_image' with 'a_name'.
      do
        is_custom_image := a_name
      ensure
        is_custom_image_set: is_custom_image = a_name		
      end

    set_last_avatar_image_hash (a_name: like last_avatar_image_hash)
        -- Set 'last_avatar_image_hash' with 'a_name'.
      do
        last_avatar_image_hash := a_name
      ensure
        last_avatar_image_hash_set: last_avatar_image_hash = a_name		
      end

    set_memberships_count (a_name: like memberships_count)
        -- Set 'memberships_count' with 'a_name'.
      do
        memberships_count := a_name
      ensure
        memberships_count_set: memberships_count = a_name		
      end

    set_phone (a_name: like phone)
        -- Set 'phone' with 'a_name'.
      do
        phone := a_name
      ensure
        phone_set: phone = a_name		
      end

    set_pronouns (a_name: like pronouns)
        -- Set 'pronouns' with 'a_name'.
      do
        pronouns := a_name
      ensure
        pronouns_set: pronouns = a_name		
      end

    set_real_name (a_name: like real_name)
        -- Set 'real_name' with 'a_name'.
      do
        real_name := a_name
      ensure
        real_name_set: real_name = a_name		
      end

    set_real_name_normalized (a_name: like real_name_normalized)
        -- Set 'real_name_normalized' with 'a_name'.
      do
        real_name_normalized := a_name
      ensure
        real_name_normalized_set: real_name_normalized = a_name		
      end

    set_skype (a_name: like skype)
        -- Set 'skype' with 'a_name'.
      do
        skype := a_name
      ensure
        skype_set: skype = a_name		
      end

    set_status_default_emoji (a_name: like status_default_emoji)
        -- Set 'status_default_emoji' with 'a_name'.
      do
        status_default_emoji := a_name
      ensure
        status_default_emoji_set: status_default_emoji = a_name		
      end

    set_status_default_text (a_name: like status_default_text)
        -- Set 'status_default_text' with 'a_name'.
      do
        status_default_text := a_name
      ensure
        status_default_text_set: status_default_text = a_name		
      end

    set_status_emoji (a_name: like status_emoji)
        -- Set 'status_emoji' with 'a_name'.
      do
        status_emoji := a_name
      ensure
        status_emoji_set: status_emoji = a_name		
      end

    set_status_expiration (a_name: like status_expiration)
        -- Set 'status_expiration' with 'a_name'.
      do
        status_expiration := a_name
      ensure
        status_expiration_set: status_expiration = a_name		
      end

    set_status_text (a_name: like status_text)
        -- Set 'status_text' with 'a_name'.
      do
        status_text := a_name
      ensure
        status_text_set: status_text = a_name		
      end

    set_team (a_name: like team)
        -- Set 'team' with 'a_name'.
      do
        team := a_name
      ensure
        team_set: team = a_name		
      end

    set_title (a_name: like title)
        -- Set 'title' with 'a_name'.
      do
        title := a_name
      ensure
        title_set: title = a_name		
      end

    set_updated (a_name: like updated)
        -- Set 'updated' with 'a_name'.
      do
        updated := a_name
      ensure
        updated_set: updated = a_name		
      end

    set_user_id (a_name: like user_id)
        -- Set 'user_id' with 'a_name'.
      do
        user_id := a_name
      ensure
        user_id_set: user_id = a_name		
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass OBJS_USER_PROFILE%N")
        if attached always_active as l_always_active then
          Result.append ("%Nalways_active:")
          Result.append (l_always_active.out)
          Result.append ("%N")    
        end  
        if attached api_app_id as l_api_app_id then
          Result.append ("%Napi_app_id:")
          Result.append (l_api_app_id.out)
          Result.append ("%N")    
        end  
        if attached avatar_hash as l_avatar_hash then
          Result.append ("%Navatar_hash:")
          Result.append (l_avatar_hash.out)
          Result.append ("%N")    
        end  
        if attached bot_id as l_bot_id then
          Result.append ("%Nbot_id:")
          Result.append (l_bot_id.out)
          Result.append ("%N")    
        end  
        if attached display_name as l_display_name then
          Result.append ("%Ndisplay_name:")
          Result.append (l_display_name.out)
          Result.append ("%N")    
        end  
        if attached display_name_normalized as l_display_name_normalized then
          Result.append ("%Ndisplay_name_normalized:")
          Result.append (l_display_name_normalized.out)
          Result.append ("%N")    
        end  
        if attached is_app_user as l_is_app_user then
          Result.append ("%Nis_app_user:")
          Result.append (l_is_app_user.out)
          Result.append ("%N")    
        end  
        if attached is_custom_image as l_is_custom_image then
          Result.append ("%Nis_custom_image:")
          Result.append (l_is_custom_image.out)
          Result.append ("%N")    
        end  
        if attached last_avatar_image_hash as l_last_avatar_image_hash then
          Result.append ("%Nlast_avatar_image_hash:")
          Result.append (l_last_avatar_image_hash.out)
          Result.append ("%N")    
        end  
        if attached memberships_count as l_memberships_count then
          Result.append ("%Nmemberships_count:")
          Result.append (l_memberships_count.out)
          Result.append ("%N")    
        end  
        if attached phone as l_phone then
          Result.append ("%Nphone:")
          Result.append (l_phone.out)
          Result.append ("%N")    
        end  
        if attached pronouns as l_pronouns then
          Result.append ("%Npronouns:")
          Result.append (l_pronouns.out)
          Result.append ("%N")    
        end  
        if attached real_name as l_real_name then
          Result.append ("%Nreal_name:")
          Result.append (l_real_name.out)
          Result.append ("%N")    
        end  
        if attached real_name_normalized as l_real_name_normalized then
          Result.append ("%Nreal_name_normalized:")
          Result.append (l_real_name_normalized.out)
          Result.append ("%N")    
        end  
        if attached skype as l_skype then
          Result.append ("%Nskype:")
          Result.append (l_skype.out)
          Result.append ("%N")    
        end  
        if attached status_default_emoji as l_status_default_emoji then
          Result.append ("%Nstatus_default_emoji:")
          Result.append (l_status_default_emoji.out)
          Result.append ("%N")    
        end  
        if attached status_default_text as l_status_default_text then
          Result.append ("%Nstatus_default_text:")
          Result.append (l_status_default_text.out)
          Result.append ("%N")    
        end  
        if attached status_emoji as l_status_emoji then
          Result.append ("%Nstatus_emoji:")
          Result.append (l_status_emoji.out)
          Result.append ("%N")    
        end  
        if attached status_expiration as l_status_expiration then
          Result.append ("%Nstatus_expiration:")
          Result.append (l_status_expiration.out)
          Result.append ("%N")    
        end  
        if attached status_text as l_status_text then
          Result.append ("%Nstatus_text:")
          Result.append (l_status_text.out)
          Result.append ("%N")    
        end  
        if attached team as l_team then
          Result.append ("%Nteam:")
          Result.append (l_team.out)
          Result.append ("%N")    
        end  
        if attached title as l_title then
          Result.append ("%Ntitle:")
          Result.append (l_title.out)
          Result.append ("%N")    
        end  
        if attached updated as l_updated then
          Result.append ("%Nupdated:")
          Result.append (l_updated.out)
          Result.append ("%N")    
        end  
        if attached user_id as l_user_id then
          Result.append ("%Nuser_id:")
          Result.append (l_user_id.out)
          Result.append ("%N")    
        end  
      end
end


