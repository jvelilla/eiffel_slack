note
 description:"[
		Slack Web API
 		One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
  		The version of the OpenAPI document: 1.7.0
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class OBJS_BOT_PROFILE 




feature --Access

    app_id: detachable STRING_32 
      
 	deleted: BOOLEAN 
    	 
    icons: detachable OBJS_BOT_PROFILE_ICONS 
      
    id: detachable STRING_32 
      
    name: detachable STRING_32 
      
    team_id: detachable STRING_32 
      
 	updated: INTEGER_32 
    	 

feature -- Change Element  
 
    set_app_id (a_name: like app_id)
        -- Set 'app_id' with 'a_name'.
      do
        app_id := a_name
      ensure
        app_id_set: app_id = a_name		
      end

    set_deleted (a_name: like deleted)
        -- Set 'deleted' with 'a_name'.
      do
        deleted := a_name
      ensure
        deleted_set: deleted = a_name		
      end

    set_icons (a_name: like icons)
        -- Set 'icons' with 'a_name'.
      do
        icons := a_name
      ensure
        icons_set: icons = a_name		
      end

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name		
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name		
      end

    set_team_id (a_name: like team_id)
        -- Set 'team_id' with 'a_name'.
      do
        team_id := a_name
      ensure
        team_id_set: team_id = a_name		
      end

    set_updated (a_name: like updated)
        -- Set 'updated' with 'a_name'.
      do
        updated := a_name
      ensure
        updated_set: updated = a_name		
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass OBJS_BOT_PROFILE%N")
        if attached app_id as l_app_id then
          Result.append ("%Napp_id:")
          Result.append (l_app_id.out)
          Result.append ("%N")    
        end  
        if attached deleted as l_deleted then
          Result.append ("%Ndeleted:")
          Result.append (l_deleted.out)
          Result.append ("%N")    
        end  
        if attached icons as l_icons then
          Result.append ("%Nicons:")
          Result.append (l_icons.out)
          Result.append ("%N")    
        end  
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")    
        end  
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")    
        end  
        if attached team_id as l_team_id then
          Result.append ("%Nteam_id:")
          Result.append (l_team_id.out)
          Result.append ("%N")    
        end  
        if attached updated as l_updated then
          Result.append ("%Nupdated:")
          Result.append (l_updated.out)
          Result.append ("%N")    
        end  
      end
end


